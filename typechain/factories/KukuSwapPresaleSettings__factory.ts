/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { KukuSwapPresaleSettings } from "../KukuSwapPresaleSettings";

export class KukuSwapPresaleSettings__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _stakingAddress: string,
    overrides?: Overrides
  ): Promise<KukuSwapPresaleSettings> {
    return super.deploy(
      _stakingAddress,
      overrides || {}
    ) as Promise<KukuSwapPresaleSettings>;
  }
  getDeployTransaction(
    _stakingAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_stakingAddress, overrides || {});
  }
  attach(address: string): KukuSwapPresaleSettings {
    return super.attach(address) as KukuSwapPresaleSettings;
  }
  connect(signer: Signer): KukuSwapPresaleSettings__factory {
    return super.connect(signer) as KukuSwapPresaleSettings__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KukuSwapPresaleSettings {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KukuSwapPresaleSettings;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "EARLY_ACCESS_MAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SETTINGS",
    outputs: [
      {
        internalType: "uint256",
        name: "BASE_FEE",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "STAKING_ADDRESS",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ROUND1_LENGTH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "MAX_PRESALE_LENGTH",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earlyAccessTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_holdAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_allow",
        type: "bool",
      },
    ],
    name: "editEarlyAccessTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getEarlyAccessTokenAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxPresaleLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRound1Length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxLength",
        type: "uint256",
      },
    ],
    name: "setMaxPresaleLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_round1Length",
        type: "uint256",
      },
    ],
    name: "setRound1Length",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "userHoldsSufficientRound1Token",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c61380380610c618339818101604052602081101561003357600080fd5b5051600061003f610105565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100ce5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c3c6025913960400191505060405180910390fd5b6032600655600780546001600160a01b0319166001600160a01b03929092169190911790556104b060085562016b76600955610109565b3390565b610b24806101186000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a25780638da5cb5b116100715780638da5cb5b1461029c5780638e56424d146102a4578063aac91216146102c1578063ade97ab5146102c9578063f2fde38b146102ff5761010b565b8063715018a6146102325780637ee360d71461023a578063847e997c1461026e5780638705fcd4146102765761010b565b80634a6da481116100de5780634a6da4811461017c57806352cf4fd4146101b657806359477dde146101f657806369fe0e2d146102155761010b565b80630e9ed68b14610110578063120ac7e61461013457806315e812ad1461014e5780632d0d9c2314610156575b600080fd5b610118610325565b604080516001600160a01b039092168252519081900360200190f35b61013c610334565b60408051918252519081900360200190f35b61013c61033a565b61013c6004803603602081101561016c57600080fd5b50356001600160a01b0316610340565b6101a26004803603602081101561019257600080fd5b50356001600160a01b0316610352565b604080519115158252519081900360200190f35b6101d3600480360360208110156101cc57600080fd5b503561042a565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6102136004803603602081101561020c57600080fd5b503561045d565b005b6102136004803603602081101561022b57600080fd5b50356104c4565b61021361052b565b6102136004803603606081101561025057600080fd5b506001600160a01b03813516906020810135906040013515156105d7565b61013c61067a565b6102136004803603602081101561028c57600080fd5b50356001600160a01b031661068b565b61011861070f565b610213600480360360208110156102ba57600080fd5b503561071e565b61013c610785565b6102d161078b565b604080519485526001600160a01b039093166020850152838301919091526060830152519081900360800190f35b6102136004803603602081101561031557600080fd5b50356001600160a01b03166107a6565b6007546001600160a01b031690565b60095490565b60065490565b60036020526000908152604090205481565b600061035c61067a565b61036857506001610425565b60005b61037361067a565b81101561041f576000806103868361042a565b9150915080826001600160a01b03166370a08231876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103d857600080fd5b505afa1580156103ec573d6000803e3d6000fd5b505050506040513d602081101561040257600080fd5b5051106104155760019350505050610425565b505060010161036b565b50600090505b919050565b600080806104396001856108a8565b6001600160a01b038116600090815260036020526040902054909350915050915091565b6104656108bd565b6001600160a01b031661047661070f565b6001600160a01b0316146104bf576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b600855565b6104cc6108bd565b6001600160a01b03166104dd61070f565b6001600160a01b031614610526576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b600655565b6105336108bd565b6001600160a01b031661054461070f565b6001600160a01b03161461058d576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6105df6108bd565b6001600160a01b03166105f061070f565b6001600160a01b031614610639576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b80156106505761064a6001846108c1565b5061065d565b61065b6001846108d6565b505b506001600160a01b03909116600090815260036020526040902055565b600061068660016108eb565b905090565b6106936108bd565b6001600160a01b03166106a461070f565b6001600160a01b0316146106ed576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6107266108bd565b6001600160a01b031661073761070f565b6001600160a01b031614610780576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b600955565b60085490565b6006546007546008546009546001600160a01b039092169184565b6107ae6108bd565b6001600160a01b03166107bf61070f565b6001600160a01b031614610808576040805162461bcd60e51b81526020600482018190526024820152600080516020610acf833981519152604482015290519081900360640190fd5b6001600160a01b03811661084d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610aa96026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006108b483836108f6565b90505b92915050565b3390565b60006108b4836001600160a01b03841661095a565b60006108b4836001600160a01b0384166109a4565b60006108b782610a6a565b815460009082106109385760405162461bcd60e51b8152600401808060200182810382526022815260200180610a876022913960400191505060405180910390fd5b82600001828154811061094757fe5b9060005260206000200154905092915050565b60006109668383610a6e565b61099c575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108b7565b5060006108b7565b60008181526001830160205260408120548015610a6057835460001980830191908101906000908790839081106109d757fe5b90600052602060002001549050808760000184815481106109f457fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080610a2457fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108b7565b60009150506108b7565b5490565b6000908152600191909101602052604090205415159056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220fed296d876f7cb28a025f58e1ab759da3d15a57640b08a7c706dd3fafb338dd764736f6c634300060c003350726573616c6553657474696e67733a207374616b696e672061646472657373207a65726f";
