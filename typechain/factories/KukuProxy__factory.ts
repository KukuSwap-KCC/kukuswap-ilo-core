/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { KukuProxy } from "../KukuProxy";

export class KukuProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _logic: string,
    admin_: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<KukuProxy> {
    return super.deploy(
      _logic,
      admin_,
      _data,
      overrides || {}
    ) as Promise<KukuProxy>;
  }
  getDeployTransaction(
    _logic: string,
    admin_: string,
    _data: BytesLike,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  attach(address: string): KukuProxy {
    return super.attach(address) as KukuProxy;
  }
  connect(signer: Signer): KukuProxy__factory {
    return super.connect(signer) as KukuProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KukuProxy {
    return new Contract(address, _abi, signerOrProvider) as KukuProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000cba38038062000cba833981016040819052620000349162000227565b8282828281620000448262000085565b8051156200006557620000638282620000e760201b620002ca1760201c565b505b506200006e9050565b620000798262000116565b50505050505062000438565b6200009b816200013a60201b620002f61760201c565b620000c35760405162461bcd60e51b8152600401620000ba9062000349565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b60606200010f838360405180606001604052806027815260200162000c936027913962000140565b9392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b3b151590565b60606200014d846200013a565b6200016c5760405162461bcd60e51b8152600401620000ba90620003a6565b60006060856001600160a01b0316856040516200018a9190620002f6565b600060405180830381855af49150503d8060008114620001c7576040519150601f19603f3d011682016040523d82523d6000602084013e620001cc565b606091505b509092509050620001df828286620001e9565b9695505050505050565b60608315620001fa5750816200010f565b8251156200020b5782518084602001fd5b8160405162461bcd60e51b8152600401620000ba919062000314565b6000806000606084860312156200023c578283fd5b835162000249816200041f565b60208501519093506200025c816200041f565b60408501519092506001600160401b038082111562000279578283fd5b818601915086601f8301126200028d578283fd5b8151818111156200029c578384fd5b604051601f8201601f191681016020018381118282101715620002bd578586fd5b604052818152838201602001891015620002d5578485fd5b620002e8826020830160208701620003ec565b809450505050509250925092565b600082516200030a818460208701620003ec565b9190910192915050565b600060208252825180602084015262000335816040850160208701620003ec565b601f01601f19169190910160400192915050565b60208082526036908201527f5570677261646561626c6550726f78793a206e657720696d706c656d656e746160408201527f74696f6e206973206e6f74206120636f6e747261637400000000000000000000606082015260800190565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6040820152651b9d1c9858dd60d21b606082015260800190565b60005b8381101562000409578181015183820152602001620003ef565b8381111562000419576000848401525b50505050565b6001600160a01b03811681146200043557600080fd5b50565b61084b80620004486000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c3578063f851a440146100e35761005d565b3661005d5761005b6100f8565b005b61005b6100f8565b34801561007157600080fd5b5061005b61008036600461052e565b610112565b61005b610093366004610555565b61014c565b3480156100a457600080fd5b506100ad6101c9565b6040516100ba91906105fc565b60405180910390f35b3480156100cf57600080fd5b5061005b6100de36600461052e565b610206565b3480156100ef57600080fd5b506100ad61029f565b6101006102fc565b61011061010b61033d565b610362565b565b61011a610386565b6001600160a01b0316336001600160a01b031614156101415761013c816103ab565b610149565b6101496100f8565b50565b610154610386565b6001600160a01b0316336001600160a01b031614156101bc57610176836103ab565b6101b68383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102ca92505050565b506101c4565b6101c46100f8565b505050565b60006101d3610386565b6001600160a01b0316336001600160a01b031614156101fb576101f461033d565b9050610203565b6102036100f8565b90565b61020e610386565b6001600160a01b0316336001600160a01b03161415610141576001600160a01b0381166102565760405162461bcd60e51b815260040161024d9061065d565b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61027f610386565b8260405161028e929190610610565b60405180910390a161013c816103eb565b60006102a9610386565b6001600160a01b0316336001600160a01b031614156101fb576101f4610386565b60606102ef83836040518060600160405280602781526020016107ef6027913961040f565b9392505050565b3b151590565b610304610386565b6001600160a01b0316336001600160a01b031614156103355760405162461bcd60e51b815260040161024d90610756565b610110610110565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610381573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6103b4816104ac565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b606061041a846102f6565b6104365760405162461bcd60e51b815260040161024d90610710565b60006060856001600160a01b03168560405161045291906105e0565b600060405180830381855af49150503d806000811461048d576040519150601f19603f3d011682016040523d82523d6000602084013e610492565b606091505b50915091506104a28282866104f5565b9695505050505050565b6104b5816102f6565b6104d15760405162461bcd60e51b815260040161024d906106ba565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b606083156105045750816102ef565b8251156105145782518084602001fd5b8160405162461bcd60e51b815260040161024d919061062a565b60006020828403121561053f578081fd5b81356001600160a01b03811681146102ef578182fd5b600080600060408486031215610569578182fd5b83356001600160a01b038116811461057f578283fd5b9250602084013567ffffffffffffffff8082111561059b578384fd5b818601915086601f8301126105ae578384fd5b8135818111156105bc578485fd5b8760208285010111156105cd578485fd5b6020830194508093505050509250925092565b600082516105f28184602087016107be565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60006020825282518060208401526106498160408501602087016107be565b601f01601f19169190910160400192915050565b6020808252603a908201527f5472616e73706172656e745570677261646561626c6550726f78793a206e657760408201527f2061646d696e20697320746865207a65726f2061646472657373000000000000606082015260800190565b60208082526036908201527f5570677261646561626c6550726f78793a206e657720696d706c656d656e74616040820152751d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd60521b606082015260800190565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6040820152651b9d1c9858dd60d21b606082015260800190565b60208082526042908201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60408201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606082015261195d60f21b608082015260a00190565b60005b838110156107d95781810151838201526020016107c1565b838111156107e8576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f22cd731698cbbc4a7a804ec85f081303de9542f5a650976e3829a200d3dc10564736f6c634300060c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
