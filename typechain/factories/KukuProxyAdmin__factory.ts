/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { KukuProxyAdmin } from "../KukuProxyAdmin";

export class KukuProxyAdmin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<KukuProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<KukuProxyAdmin>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KukuProxyAdmin {
    return super.attach(address) as KukuProxyAdmin;
  }
  connect(signer: Signer): KukuProxyAdmin__factory {
    return super.connect(signer) as KukuProxyAdmin__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KukuProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as KukuProxyAdmin;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6107c48061007d6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461010257806399a88ec414610115578063f2fde38b14610135578063f3b7dead146101555761007b565b8063204e1c7a14610080578063715018a6146100b65780637eff275e146100cd5780638da5cb5b146100ed575b600080fd5b34801561008c57600080fd5b506100a061009b36600461052d565b610175565b6040516100ad9190610684565b60405180910390f35b3480156100c257600080fd5b506100cb6101fb565b005b3480156100d957600080fd5b506100cb6100e836600461056c565b61028d565b3480156100f957600080fd5b506100a061032e565b6100cb6101103660046105a4565b61033d565b34801561012157600080fd5b506100cb61013036600461056c565b6103e3565b34801561014157600080fd5b506100cb61015036600461052d565b61044e565b34801561016157600080fd5b506100a061017036600461052d565b61050e565b6000806060836001600160a01b031660405161019090610664565b600060405180830381855afa9150503d80600081146101cb576040519150601f19603f3d011682016040523d82523d6000602084013e6101d0565b606091505b5091509150816101df57600080fd5b808060200190518101906101f39190610550565b949350505050565b610203610529565b6001600160a01b031661021461032e565b6001600160a01b0316146102435760405162461bcd60e51b815260040161023a90610741565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610295610529565b6001600160a01b03166102a661032e565b6001600160a01b0316146102cc5760405162461bcd60e51b815260040161023a90610741565b6040516308f2839760e41b81526001600160a01b03831690638f283970906102f8908490600401610684565b600060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b610345610529565b6001600160a01b031661035661032e565b6001600160a01b03161461037c5760405162461bcd60e51b815260040161023a90610741565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906103ac9086908690600401610698565b6000604051808303818588803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b5050505050505050565b6103eb610529565b6001600160a01b03166103fc61032e565b6001600160a01b0316146104225760405162461bcd60e51b815260040161023a90610741565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe6906102f8908490600401610684565b610456610529565b6001600160a01b031661046761032e565b6001600160a01b03161461048d5760405162461bcd60e51b815260040161023a90610741565b6001600160a01b0381166104b35760405162461bcd60e51b815260040161023a906106fb565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806060836001600160a01b031660405161019090610674565b3390565b60006020828403121561053e578081fd5b813561054981610776565b9392505050565b600060208284031215610561578081fd5b815161054981610776565b6000806040838503121561057e578081fd5b823561058981610776565b9150602083013561059981610776565b809150509250929050565b6000806000606084860312156105b8578081fd5b83356105c381610776565b92506020848101356105d481610776565b9250604085013567ffffffffffffffff808211156105f0578384fd5b818701915087601f830112610603578384fd5b813581811115610611578485fd5b604051601f8201601f1916810185018381118282101715610630578687fd5b60405281815283820185018a1015610646578586fd5b81858501868301378585838301015280955050505050509250925092565b635c60da1b60e01b815260040190565b6303e1469160e61b815260040190565b6001600160a01b0391909116815260200190565b600060018060a01b038416825260206040818401528351806040850152825b818110156106d3578581018301518582016060015282016106b7565b818111156106e45783606083870101525b50601f01601f191692909201606001949350505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461078b57600080fd5b5056fea2646970667358221220084e21e4a102c3152bc5555a52fb51408f7c0030216496d36d8dcc236000aac264736f6c634300060c0033";
